.syntax unified
.cpu cortex-m4
.thumb

/* Vector table */
.section .isr_vector, "a", %progbits
.word _stack_top            // Initial stack pointer
.word reset_handler         // Reset vector

.section .text
.global reset_handler
.type reset_handler, %function

reset_handler:
    // Copy .data from flash to RAM
    LDR r0, =_sdata
    LDR r1, =_edata
    LDR r2, =_sidata
copy_data:
    CMP r0, r1
    ITT lt
    LDRLT r3, [r2], #4
    STRLT r3, [r0], #4
    BLT copy_data

    // Zero initialize .bss
    LDR r0, =_sbss
    LDR r1, =_ebss
zero_bss:
    CMP r0, r1
    ITT lt
    MOVLT r2, #0
    STRLT r2, [r0], #4
    BLT zero_bss

    BL main              // jump to main
1:  B 1b                 // infinite loop after main returns

/*  main program  */
.global main
.type main, %function
main:
    LDR r0, =num1       // load address of num1
    LDR r1, [r0]        // load value of num1
    LDR r0, =num2       // load address of num2
    LDR r2, [r0]        // load value of num2
    ADD r3, r1, r2      // add r1 + r2 -> r3
    LDR r0, =result     // load address of result
    STR r3, [r0]        // store r3 -> result

endless:
    B endless           // infinite loop

/*  Data section  */
.section .data
num1:   .word 0x0D
num2:   .word 0x11
result: .word 0

.section .bss
.comm temp, 4, 4

.section .stack, "a", %progbits
_stack_top:
    .space 0x400
